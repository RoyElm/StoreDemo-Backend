{"version":3,"sources":["Redux/CartState.ts","Redux/HatsState.ts","Redux/ItemsState.ts","Services/Globals.ts","Socket.io/SocketManager.ts","Services/GlobalHelpers.ts","Redux/AuthState.ts","Redux/Store.ts","Services/GlobalPaths.ts","Components/UserArea/LogoutTab/LogoutTab.tsx","Components/UserArea/LoginTab/LoginTab.tsx","Components/UserArea/NavLog/NavLog.tsx","Components/CartArea/totalItems/totalItems.tsx","Components/LayoutArea/Header/Header.tsx","Components/CreatingComponents/Links/Links.tsx","Components/LayoutArea/Menu/Menu.tsx","Components/LayoutArea/Home/Home.tsx","Components/LayoutArea/Page404/Page404.tsx","Components/About/About.tsx","assets/images/firstLink.jpg","assets/images/secondLink.jpg","Services/GlobalStylingMaker.ts","Components/ShopArea/Shop/Shop.tsx","Services/GlobalErrors.service.ts","Services/notification.service.ts","Components/ShopArea/hatCard/hatCard.tsx","Components/ShopArea/AdminHatCard/AdminHatCard.tsx","Components/ShopArea/Hats-items/Hats-Items.tsx","Components/ShopArea/imageCarousel/imageCarousel.tsx","Components/ShopArea/itemCard/itemCard.tsx","Components/ShopArea/AdminItemCard/AdminItemCard.tsx","Components/ShopArea/items/items.tsx","Components/CartArea/CartCardHat/CartCardHat.tsx","Components/CartArea/CartCardItem/CartCardItem.tsx","Components/CartArea/CartShop/CartShop.tsx","Components/UserArea/Login/Login.tsx","Components/UserArea/Register/Register.tsx","Components/CartArea/AddressForm/AddressForm.tsx","Components/CartArea/PaymentForm/PaymentForm.tsx","Components/CartArea/FinalReview/FinalReview.tsx","Components/Models/orderModel.ts","Components/Models/creditCardModel.ts","Components/CartArea/Checkout/Checkout.tsx","Components/ShopArea/AddItem/AddItem.tsx","Components/ShopArea/EditItem/EditItem.tsx","Components/ShopArea/AddHat/AddHat.tsx","Components/ShopArea/EditHat/EditHat.tsx","Components/LayoutArea/Routing/Routing.tsx","Components/LayoutArea/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["CartActionType","CartState","cart","price","JSON","parse","localStorage","getItem","this","HatsActionType","HatsState","hats","itemsActionType","ItemsState","items","Globals","itemsUrl","hatsUrl","authUrl","socketUrl","url","socketManagerInstance","socket","io","on","addedItem","store","dispatch","type","ItemAdded","payload","itemAddedAction","updatedItem","ItemUpdated","itemUpdatedAction","itemId","ItemDeleted","itemDeletedAction","addedHat","HatAdded","hatAddedAction","updatedHat","HatUpdated","hatUpdatedAction","hatId","HatDeleted","hatDeletedAction","disconnect","authorizationHeader","userLogged","axios","defaults","headers","token","logoutUser","AuthActionType","AuthLoggedOut","authState","auth","isLoggedIn","user","sessionStorage","authLoggedInAction","AuthLoggedIn","authRegisteredAction","AuthRegistered","reducers","combineReducers","hatsState","currentState","action","newState","HatsDownloaded","push","indexToUpdate","findIndex","p","console","log","indexToDelete","splice","itemsState","ItemsDownloaded","id","setItem","stringify","cartState","itemAdded","hatAdded","hatDeleted","hatIndexToDelete","itemDeleted","itemIndexToDelete","updatePrice","createStore","GlobalPaths","homeLinkUrl","aboutLinkUrl","storeLinkUrl","storeHatsLinkUrl","storeItemsLinkUrl","loginLinkUrl","registerLinkUrl","cartShopUrl","paymentUrl","addItemUrl","editItemUrl","editHatUrl","addHatUrl","LogoutTab","props","className","firstName","to","onClick","LoginTab","NavLog","useState","getState","setAuth","anchorEl","setAnchorEl","menuItemRef","useRef","open","Boolean","handleClose","useEffect","subscribe","Avatar","aria-label","aria-controls","aria-haspopup","current","charAt","toUpperCase","Menu","keepMounted","onClose","MenuItem","ref","TotalItems","length","itemsLength","setItemsLength","itemLength","LocalGroceryStore","Header","Component","Links","route","content","Home","Page404","About","href","GitHub","LinkedIn","Email","createStyles","makeStyles","root","maxWidth","height","width","display","marginLeft","marginTop","media","primary","color","secondary","formControl","margin","minWidth","fab","cover","usingStyle","creatingClasses","textBox","createClasses","createTheme","createMuiTheme","typography","fontFamily","fontSize","h3","palette","main","lightBlue","purple","authPageStyling","theme","image","backgroundImage","backgroundRepeat","backgroundColor","grey","backgroundSize","backgroundPosition","paper","spacing","flexDirection","alignItems","avatar","form","submit","createStyle","Shop","classes","Card","title","CardActionArea","CardMedia","firstLink","CardActions","secondLink","errorsService","err","error","Array","isArray","allErrors","response","data","message","startsWith","notificationService","notyf","Notyf","duration","ripple","position","x","y","success","getError","HatCard","addToCart","hat","cartHatAddedAction","imageName","CardContent","Typography","variant","component","colors","Fab","Add","AdminHatCard","history","useHistory","handleDeleteHat","a","window","confirm","delete","status","Edit","Delete","Hats","unsubscribeFromStore","state","setState","Axios","get","isAdmin","map","AutoPlaySwipeableViews","autoPlay","SwipeableViews","ImageCarousel","useTheme","CarouselClasses","flexGrow","header","img","overflow","useStyles","activeStep","setActiveStep","images","split","maxSteps","axis","direction","index","onChangeIndex","step","enableMouseEvents","Math","abs","src","alt","Button","size","prevActiveStep","disabled","KeyboardArrowRight","KeyboardArrowLeft","ItemCard","item","cartItemAddedAction","itemName","description","itemPrice","AdminItemCard","handleDelete","Items","CartCardHat","deleteFromCart","cartHatDeletedAction","CartCardItem","cartItemDeletedAction","CartShop","unSubscribeFromStore","carts","updatePriceAction","AttachMoney","Payment","Login","registered","useForm","register","handleSubmit","post","connect","Grid","container","CssBaseline","xs","sm","md","Paper","elevation","square","LockOutlined","onSubmit","TextField","required","fullWidth","inputRef","label","name","autoComplete","autoFocus","align","Box","mt","Date","getFullYear","Register","newUser","AddressForm","defaultValues","addressState","gutterBottom","onChange","handleAddressChange","PaymentForm","paymentState","CreditCard","handlePaymentChange","InputLabelProps","shrink","inputProps","min","fullYear","fullMonth","getMonth","toString","changeDateFormat","helperText","FinalReview","payments","detail","nameOnCard","cardNumber","expiryDate","listItem","padding","total","fontWeight","final","products","setPrice","newPrice","product","Fragment","List","disablePadding","ListItem","ListItemText","lastName","address","payment","orderModel","city","zip","country","creditCardModel","cvv","Checkout","steps","input","e","target","value","undefined","addressComplete","paymentComplete","handleNext","handleBack","getStepContent","Error","Stepper","Step","StepLabel","AddItem","newItem","myFormData","FormData","append","newImage","ThemeProvider","method","encType","minLength","maxLength","multiline","max","accept","ButtonGroup","startIcon","Send","Clear","EditItem","useParams","find","i","put","AddHat","newHat","EditHat","editedHat","Routing","path","exact","HatsItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49e2db19.chunk.js","sourcesContent":["import CartModel from \"../Components/Models/CartModel\";\r\nimport HatModel from \"../Components/Models/HatModel\";\r\nimport woolfitModel from \"../Components/Models/ItemsModel\";\r\n\r\nexport class CartState {\r\n    public cart: CartModel[] = [];\r\n    public price: number = 0;\r\n\r\n    constructor() {\r\n        const cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        if (cart) {\r\n            this.cart = cart;\r\n        }\r\n    }\r\n}\r\n\r\nexport enum CartActionType {\r\n    itemAdded = \"itemAdded\",\r\n    itemDeleted = \"itemDeleted\",\r\n    hatAdded = \"hatAdded\",\r\n    hatDeleted = \"hatDeleted\",\r\n    updatePrice = \"updatePrice\"\r\n}\r\n\r\nexport interface CartAction {\r\n    type: CartActionType; // מה סוג הפעולה שברצוננו לבצע\r\n    payload?: any; // לצורך ביצוע הפעולה Redux-מה המידע שיש לשלוח ל\r\n}\r\n\r\n//Cart Action Creators \r\nexport function cartHatAddedAction(hat: HatModel): CartAction {\r\n    return { type: CartActionType.hatAdded, payload: hat };\r\n}\r\nexport function cartItemAddedAction(item: woolfitModel): CartAction {\r\n    return { type: CartActionType.itemAdded, payload: item };\r\n}\r\n\r\nexport function cartHatDeletedAction(hatId: number): CartAction {\r\n    return { type: CartActionType.hatDeleted, payload: hatId };\r\n}\r\n\r\nexport function cartItemDeletedAction(itemId: number): CartAction {\r\n    return { type: CartActionType.itemDeleted, payload: itemId };\r\n}\r\n\r\nexport function updatePriceAction(price: number): CartAction {\r\n    return { type: CartActionType.updatePrice, payload: price };\r\n}\r\n\r\n\r\nexport function cartReducer(\r\n    currentState: CartState = new CartState(),\r\n    action: CartAction): CartState {\r\n\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n\r\n        case CartActionType.itemAdded:\r\n        case CartActionType.hatAdded:\r\n            newState.cart.push(action.payload);\r\n            break;\r\n\r\n        case CartActionType.hatDeleted:\r\n            const hatIndexToDelete = newState.cart.findIndex(p => p.hatId === action.payload); // payload = the deleted product's id\r\n            newState.cart.splice(hatIndexToDelete, 1);\r\n            break;\r\n\r\n        case CartActionType.itemDeleted:\r\n            const itemIndexToDelete = newState.cart.findIndex(p => p.itemId === action.payload); // payload = the deleted product's id\r\n            newState.cart.splice(itemIndexToDelete, 1);\r\n            break;\r\n\r\n        case CartActionType.updatePrice:\r\n            newState.price = action.payload;\r\n            break;\r\n    }\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(newState.cart))\r\n\r\n    return newState;\r\n}\r\n","import HatModel from \"../Components/Models/HatModel\";\r\n\r\n// Products State: \r\nexport class HatsState {\r\n    public hats: HatModel[] = [];\r\n}\r\n\r\n// Products Action Types: \r\nexport enum HatsActionType {\r\n    HatsDownloaded = \"HatsDownloaded\",\r\n    HatAdded = \"HatAdded\",\r\n    HatUpdated = \"HatUpdated\",\r\n    HatDeleted = \"HatDeleted\"\r\n}\r\n\r\n// Products Action: \r\nexport interface HatsAction {\r\n    type: HatsActionType; // מה סוג הפעולה שברצוננו לבצע\r\n    payload?: any; // לצורך ביצוע הפעולה Redux-מה המידע שיש לשלוח ל\r\n}\r\n\r\n// Hats Action Creators: \r\nexport function hatsDownloadedAction(hats: HatModel[]): HatsAction {\r\n    return { type: HatsActionType.HatsDownloaded, payload: hats };\r\n}\r\n\r\nexport function hatAddedAction(addedHat: HatModel): HatsAction {\r\n    return { type: HatsActionType.HatAdded, payload: addedHat };\r\n}\r\n\r\nexport function hatUpdatedAction(updatedHat: HatModel): HatsAction {\r\n    return { type: HatsActionType.HatUpdated, payload: updatedHat };\r\n}\r\n\r\nexport function hatDeletedAction(hatId: number): HatsAction {\r\n    return { type: HatsActionType.HatDeleted, payload: hatId };\r\n}\r\n\r\n\r\n// Products Reducer: \r\nexport function hatsReducer(\r\n    currentState: HatsState = new HatsState(),\r\n    action: HatsAction): HatsState {\r\n\r\n    const newState = { ...currentState }; // Duplicate currentState into a newState.\r\n\r\n    switch (action.type) {\r\n        case HatsActionType.HatsDownloaded:\r\n            newState.hats = action.payload; // payload = all products\r\n            break;\r\n\r\n        case HatsActionType.HatAdded:\r\n            newState.hats.push(action.payload); // payload = the added product\r\n            break;\r\n\r\n        case HatsActionType.HatUpdated:\r\n            const indexToUpdate = newState.hats.findIndex(p => p.hatId === action.payload.hatId);\r\n            console.log(action.payload.hatId);\r\n            newState.hats[indexToUpdate] = action.payload;\r\n            break;\r\n\r\n        case HatsActionType.HatDeleted:\r\n            const indexToDelete = newState.hats.findIndex(p => p.hatId === action.payload); // payload = the deleted product's id\r\n            newState.hats.splice(indexToDelete, 1);\r\n            break;\r\n    }\r\n\r\n    return newState; // Return the newState.\r\n}\r\n","import itemsModel from \"../Components/Models/ItemsModel\";\r\n\r\n// Items State: \r\nexport class ItemsState {\r\n    public items: itemsModel[] = [];\r\n}\r\n\r\n// Items Action Types: \r\nexport enum itemsActionType {\r\n    ItemsDownloaded = \"ItemsDownloaded\",\r\n    ItemAdded = \"ItemAdded\",\r\n    ItemUpdated = \"ItemUpdated\",\r\n    ItemDeleted = \"ItemDeleted\"\r\n}\r\n\r\n// Items Action: \r\nexport interface ItemsAction {\r\n    type: itemsActionType;\r\n    payload?: any;\r\n}\r\n\r\n// items Action Creators: \r\nexport function itemsDownloadedAction(items: itemsModel[]): ItemsAction {\r\n    return { type: itemsActionType.ItemsDownloaded, payload: items };\r\n}\r\n\r\nexport function itemAddedAction(addedItem: itemsModel): ItemsAction {\r\n    return { type: itemsActionType.ItemAdded, payload: addedItem };\r\n}\r\n\r\nexport function itemUpdatedAction(updatedItem: itemsModel): ItemsAction {\r\n    return { type: itemsActionType.ItemUpdated, payload: updatedItem };\r\n}\r\n\r\nexport function itemDeletedAction(itemId: number): ItemsAction {\r\n    return { type: itemsActionType.ItemDeleted, payload: itemId };\r\n}\r\n\r\n\r\n// Items Reducer: \r\nexport function itemsReducer(\r\n    currentState: ItemsState = new ItemsState(),\r\n    action: ItemsAction): ItemsState {\r\n\r\n    const newState = { ...currentState };\r\n\r\n    switch (action.type) {\r\n        case itemsActionType.ItemsDownloaded:\r\n            newState.items = action.payload;\r\n            break;\r\n\r\n        case itemsActionType.ItemAdded:\r\n            newState.items.push(action.payload);\r\n            break;\r\n\r\n        case itemsActionType.ItemUpdated:\r\n            const indexToUpdate = newState.items.findIndex(p => p.itemId === action.payload.id);\r\n            newState.items[indexToUpdate] = action.payload;\r\n            break;\r\n\r\n        case itemsActionType.ItemDeleted:\r\n            const indexToDelete = newState.items.findIndex(p => p.itemId === action.payload);\r\n            newState.items.splice(indexToDelete, 1);\r\n            break;\r\n    }\r\n\r\n    return newState; // Return the newState.\r\n}\r\n","export class Globals {\r\n    public static authUrl: string;\r\n    public static hatsUrl: string;\r\n    public static itemsUrl: string;\r\n    public static socketUrl: string;\r\n\r\n    public static url() {\r\n        if (process.env.NODE_ENV === \"production\") {\r\n            Globals.itemsUrl = \"https://demo-store-project.herokuapp.com/api/store/items/\";\r\n            Globals.hatsUrl = \"https://demo-store-project.herokuapp.com/api/store/hats/\";\r\n            Globals.authUrl = \"https://demo-store-project.herokuapp.com/api/auth/\";\r\n            Globals.socketUrl = \"https://demo-store-project.herokuapp.com/\";\r\n        } else {\r\n            Globals.itemsUrl = \"http://localhost:3001/api/store/items/\";\r\n            Globals.hatsUrl = \"http://localhost:3001/api/store/hats/\";\r\n            Globals.authUrl = \"http://localhost:3001/api/auth/\";\r\n            Globals.socketUrl = \"http://localhost:3001/\";\r\n        }\r\n    }\r\n}\r\n\r\nGlobals.url();","import { io, Socket } from \"socket.io-client\";\r\nimport { hatAddedAction, hatDeletedAction, hatUpdatedAction } from \"../Redux/HatsState\";\r\nimport { itemAddedAction, itemDeletedAction, itemUpdatedAction } from \"../Redux/ItemsState\";\r\nimport store from \"../Redux/Store\";\r\nimport { Globals } from '../Services/Globals';\r\n\r\nclass SocketManager {\r\n\r\n    private socket: Socket;\r\n    public connect(): void {\r\n\r\n        // Connect to socket.io:\r\n        this.socket = io(Globals.socketUrl);\r\n\r\n        // Listen to socket.io events: \r\n        this.socket.on(\"msg-from-server-item-added\", addedItem => {\r\n            store.dispatch(itemAddedAction(addedItem));\r\n        });\r\n        this.socket.on(\"msg-from-server-item-updated\", updatedItem => {\r\n            store.dispatch(itemUpdatedAction(updatedItem));\r\n        });\r\n        this.socket.on(\"msg-from-server-item-deleted\", itemId => {\r\n            store.dispatch(itemDeletedAction(itemId));\r\n        });\r\n        // Listen to socket.io events: \r\n        this.socket.on(\"msg-from-server-hat-added\", addedHat => {\r\n            store.dispatch(hatAddedAction(addedHat));\r\n        });\r\n        this.socket.on(\"msg-from-server-hat-updated\", updatedHat => {\r\n            store.dispatch(hatUpdatedAction(updatedHat));\r\n        });\r\n        this.socket.on(\"msg-from-server-hat-deleted\", hatId => {\r\n            store.dispatch(hatDeletedAction(hatId));\r\n        });\r\n\r\n    }\r\n\r\n    public disconnect(): void {\r\n        this.socket.disconnect();\r\n    }\r\n}\r\n\r\nexport const socketManagerInstance = new SocketManager();\r\n","import store from \"../Redux/Store\";\r\nimport { authLoggedOutAction } from \"../Redux/AuthState\";\r\nimport LoginModel from \"../Components/Models/LoginModel\";\r\nimport axios from \"axios\";\r\nimport { socketManagerInstance } from \"../Socket.io/SocketManager\";\r\n\r\n\r\n//Handling header authorization adding user token.\r\nexport function authorizationHeader(userLogged: LoginModel) {\r\n    axios.defaults.headers[\"authorization\"] = `Bearer ${userLogged.token}`;\r\n    return;\r\n}\r\n\r\n//Handling logout user reseting vacation list, logging out user at redux, deleting token from header and disconnect from socket.io.\r\nexport function logoutUser() {\r\n    store.dispatch(authLoggedOutAction());\r\n    delete axios.defaults.headers[\"authorization\"];\r\n    socketManagerInstance.disconnect();\r\n    return;\r\n}\r\n","import authModel from \"../Components/Models/authModel\";\r\nimport LoginModel from \"../Components/Models/LoginModel\";\r\nimport { authorizationHeader } from \"../Services/GlobalHelpers\";\r\n\r\n\r\n// Products State: \r\nexport class authState {\r\n    public auth: authModel = { isLoggedIn: false, user: null };\r\n\r\n    constructor() {\r\n        const auth = JSON.parse(sessionStorage.getItem(\"auth\"));\r\n        if (auth && auth.isLoggedIn) {\r\n            this.auth = auth;\r\n            authorizationHeader(auth.user);\r\n        }\r\n    }\r\n}\r\n\r\n// User Action Types: \r\nexport enum AuthActionType {\r\n    AuthLoggedIn = \"AuthLoggedIn\",\r\n    AuthRegistered = \"AuthRegistered\",\r\n    AuthLoggedOut = \"AuthLoggedOut\"\r\n}\r\n\r\n// User Action: \r\nexport interface AuthAction {\r\n    type: AuthActionType; // מה סוג הפעולה שברצוננו לבצע\r\n    payload?: any; // לצורך ביצוע הפעולה Redux-מה המידע שיש לשלוח ל\r\n}\r\n\r\n//Auth Action Creators \r\nexport function authLoggedInAction(user: LoginModel): AuthAction {\r\n    return { type: AuthActionType.AuthLoggedIn, payload: user };\r\n}\r\n\r\nexport function authRegisteredAction(user: LoginModel): AuthAction {\r\n    return { type: AuthActionType.AuthRegistered, payload: user };\r\n}\r\n\r\nexport function authLoggedOutAction(): AuthAction {\r\n    return { type: AuthActionType.AuthLoggedOut };\r\n}\r\n\r\n// Auth Reducer: \r\nexport function AuthReducer(\r\n    currentState: authState = new authState(),\r\n    action: AuthAction): authState {\r\n\r\n    const newState = { ...currentState }; // Duplicate currentState into a newState.\r\n\r\n    switch (action.type) {\r\n        case AuthActionType.AuthRegistered:\r\n        case AuthActionType.AuthLoggedIn:\r\n            newState.auth = { isLoggedIn: true, user: action.payload };\r\n            break;\r\n\r\n        case AuthActionType.AuthLoggedOut:\r\n            newState.auth = { isLoggedIn: false, user: null };\r\n            break;\r\n    }\r\n\r\n    sessionStorage.setItem(\"auth\", JSON.stringify(newState.auth))\r\n\r\n    return newState;\r\n}\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { cartReducer } from \"./CartState\";\r\nimport { hatsReducer } from './HatsState';\r\nimport { AuthReducer } from './AuthState';\r\nimport { itemsReducer } from './ItemsState';\r\n\r\nconst reducers = combineReducers({ hatsState: hatsReducer, itemsState: itemsReducer, authState: AuthReducer, cartState: cartReducer });\r\nconst store = createStore(reducers);\r\n\r\nexport default store;\r\n","export class GlobalPaths {\r\n    public static homeLinkUrl = \"/\";\r\n    public static aboutLinkUrl = \"/about\";\r\n    public static storeLinkUrl = \"/store\";\r\n    public static storeHatsLinkUrl = \"/store/hats\";\r\n    public static storeItemsLinkUrl = \"/store/items\";\r\n    public static loginLinkUrl = \"/auth/login\";\r\n    public static registerLinkUrl = \"/auth/register\";\r\n    public static cartShopUrl = \"/cart/shop\";\r\n    public static paymentUrl = \"/cart/payment\";\r\n    public static addItemUrl = \"/store/AddItem\";\r\n    public static editItemUrl = \"/store/editItem\";\r\n    public static editHatUrl = \"/store/editHat\";\r\n    public static addHatUrl = \"/store/addHat\";\r\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { logoutUser } from \"../../../Services/GlobalHelpers\";\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\nimport LoginModel from \"../../Models/LoginModel\";\n\ninterface userProps {\n    user: LoginModel;\n}\n\nfunction LogoutTab(props: userProps): JSX.Element {\n\n    return (\n        <div className=\"LogoutTab\">\n            <span> Welcome {props.user && props.user.firstName}</span>\n            <br />\n            <NavLink to={GlobalPaths.loginLinkUrl} onClick={logoutUser}>Logout</NavLink>\n        </div>\n    );\n}\n\nexport default LogoutTab;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\n\nfunction LoginTab(): JSX.Element {\n    return (\n        <div className=\"LoginTab\">\n            <NavLink to={GlobalPaths.loginLinkUrl}>Login</NavLink>\n            <span>/</span>\n            <NavLink to={GlobalPaths.registerLinkUrl}>Register</NavLink>\n        </div>\n    );\n}\n\nexport default LoginTab;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./NavLog.css\";\nimport { Unsubscribe } from \"redux\";\nimport store from \"../../../Redux/Store\";\nimport LogoutTab from \"../LogoutTab/LogoutTab\";\nimport LoginTab from \"../LoginTab/LoginTab\";\nimport { Avatar, Menu, MenuItem } from \"@material-ui/core\";\nimport authModel from \"../../Models/authModel\";\n\n\nfunction NavLog(): JSX.Element {\n\n    //Handling user login/logout changes.\n    const [auth, setAuth] = useState<authModel>(store.getState().authState.auth);\n\n    //build in Material UI requirements\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const menuItemRef = useRef()\n    const open = Boolean(anchorEl);\n\n    //handling click on Menu component and open the Menu items used Material ui documentation\n    const handleClick = () => {\n        setAnchorEl(menuItemRef.current);\n    };\n\n    //handle close menu item component.\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    \n    //Handling user login to render his first later of first name to show at Menu, also to know if he logged out or logged in;\n    useEffect(() => {\n        const unSubscribe: Unsubscribe = store.subscribe(() => {\n            const auth = store.getState().authState.auth;\n            setAuth(auth);\n        });\n        return unSubscribe;\n    })\n\n    return (\n        <nav className=\"NavLog\">\n            <Avatar\n                aria-label=\"more\"\n                aria-controls=\"long-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                className=\"avatar\"\n            >\n                {auth.user && auth.isLoggedIn ? auth.user.firstName.charAt(0).toUpperCase() : null}\n            </Avatar>\n\n            <Menu\n                className=\"long-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}>\n                <MenuItem onClick={handleClose} ref={menuItemRef}>\n                    {auth.user && auth.isLoggedIn ? <LogoutTab user={auth.user} /> : <LoginTab />}\n                </MenuItem>\n            </Menu>\n        </nav>\n    );\n}\n\nexport default NavLog;\n","import React, { useEffect, useState } from \"react\";\nimport { Unsubscribe } from \"redux\";\nimport store from \"../../../Redux/Store\";\nimport \"./totalItems.css\";\nimport { LocalGroceryStore } from '@material-ui/icons';\nimport { NavLink } from \"react-router-dom\";\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\n\n\nfunction TotalItems(): JSX.Element {\n\n    const [itemsLength, setItemsLength] = useState<number>(store.getState().cartState.cart.length);\n\n    useEffect(() => {\n        const unSubscribeFromStore: Unsubscribe = store.subscribe(() => {\n            const itemLength = store.getState().cartState.cart.length;\n            setItemsLength(itemLength);\n        })\n        return unSubscribeFromStore;\n    })\n\n    return (\n        <NavLink className=\"totalItems\" to={GlobalPaths.cartShopUrl}>\n            {itemsLength} \n            <LocalGroceryStore />\n        </NavLink>\n    );\n}\n\nexport default TotalItems;\n","import React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\nimport NavLog from \"../../UserArea/NavLog/NavLog\";\r\nimport TotalItems from \"../../CartArea/totalItems/totalItems\";\r\n\r\n\r\nclass Header extends Component {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"Header\">\r\n                <TotalItems />\r\n                <NavLog />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Links.css\";\r\n\r\ninterface navLinkProps {\r\n    content: string;\r\n    route: string;\r\n}\r\n\r\nfunction Links(props: navLinkProps): JSX.Element {\r\n    return (\r\n        <NavLink to={props.route} className=\"navTag\">\r\n            <span>{props.content}</span>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default Links;\r\n","import React from \"react\";\r\nimport \"./Menu.css\";\r\nimport Links from '../../CreatingComponents/Links/Links';\r\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\r\n\r\nfunction Menu(): JSX.Element {\r\n    return (\r\n        <div className=\"Menu\">\r\n            <div>\r\n                <Links content={\"Home\"} route={GlobalPaths.homeLinkUrl} />\r\n                <Links content={\"Store\"} route={GlobalPaths.storeLinkUrl}  />\r\n                <Links content={\"About\"} route={GlobalPaths.aboutLinkUrl} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\n\r\n//img with class\r\nclass Home extends Component {\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div className=\"Home\">\r\n                <h1 className=\"MainSentence\">\r\n                   Welcome to my Store Website Demo\r\n                   <br/>\r\n                   build By: Roy Elmakies \r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Home;\r\n\r\n","import React from \"react\";\r\n\r\nfunction Page404(): JSX.Element {\r\n    return (\r\n        <div className=\"Page404\">\r\n\t\t\t<p>The page you are looking for doesn't exist</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page404;\r\n","import React from 'react';\r\nimport './About.css';\r\nimport { Email, GitHub, LinkedIn } from \"@material-ui/icons\";\r\n\r\nfunction About(): JSX.Element {\r\n    return (\r\n        <div className=\"About\">\r\n            <h2 className=\"MainSentence\">\r\n                I'm Roy Elmakies 23 years old. Waiting for the next story to be written.\r\n                <br/>\r\n                Junior Web Developer specializing in Full Stack development.\r\n                <br/>\r\n                Experienced for dynamic web projects. Well versed in numerous programing language React.js, TS, Angular, Node.js-Express.js, MySQL, MongoDB.\r\n                <br/>\r\n                Strong background at Gaming and Computer Analysis.\r\n                <br/>\r\n                See my projects at Github <a href=\"https://github.com/RoyElm\"><GitHub /></a><br /> \r\n                my Contact:\r\n                <a href=\"https://www.linkedin.com/in/royelmakies/\"><LinkedIn /></a>\r\n                <a href=\"mailto:roye456@gmail.com\"><Email /></a>\r\n                <br />\r\n                   Build By: Roy Elmakies\r\n                </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","export default __webpack_public_path__ + \"static/media/firstLink.fc6ed19c.jpg\";","export default __webpack_public_path__ + \"static/media/secondLink.d1aa477f.jpg\";","import { createMuiTheme } from \"@material-ui/core\";\r\nimport { Theme, makeStyles } from '@material-ui/core/styles';\r\nimport creatingStyle from '@material-ui/core/styles/createStyles';\r\nimport { lightBlue, purple } from \"@material-ui/core/colors\";\r\n\r\n//Global function styles maker, each component in program can use this functions to create style classes;\r\n\r\nexport function createStyles() {\r\n    const usingStyle = makeStyles({\r\n        root: {\r\n            maxWidth: 320,\r\n            height: 300,\r\n            width: 200,\r\n            display: \"inline-block\",\r\n            marginLeft: 5,\r\n            marginTop: 5\r\n        },\r\n        media: {\r\n            height: 170,\r\n            width: 200\r\n        },\r\n        primary: {\r\n            color: \"#ff8a80\"\r\n        },\r\n        secondary: {\r\n            color: \"#999999\"\r\n        },\r\n        formControl: {\r\n            margin: 0,\r\n            minWidth: 80,\r\n        }, fab: {\r\n            height: 40,\r\n            width: 40,\r\n        }, cover: {\r\n            width: 80,\r\n            height: 90,\r\n\r\n        },\r\n    });\r\n\r\n    return usingStyle();\r\n}\r\n\r\nexport function creatingClasses() {\r\n    const createClasses = makeStyles({\r\n        textBox: { margin: \"5px 0\", width: 400 }\r\n    });\r\n\r\n    return createClasses();\r\n}\r\n\r\nexport function createTheme() {\r\n    return createMuiTheme({\r\n        typography: {\r\n            fontFamily: \"fantasy\",\r\n            fontSize: 15,\r\n            h3: {\r\n                fontSize: 30\r\n            }\r\n        },\r\n        palette: {\r\n            primary: {\r\n                main: lightBlue[600]\r\n            },\r\n            secondary: {\r\n                main: purple[600]\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nexport function CarouselStyle() {\r\n    const useStyles = makeStyles({\r\n        root: {\r\n            maxWidth: 300,\r\n            flexGrow: 1,\r\n        },\r\n        header: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            height: 50,\r\n        },\r\n        img: {\r\n            height: 150,\r\n            display: 'block',\r\n            overflow: 'hidden',\r\n            width: '100%',\r\n        }\r\n    });\r\n    return useStyles();\r\n}\r\n\r\nexport function createHeadStyle() {\r\n    const usingStyles = makeStyles((theme: Theme) =>\r\n        creatingStyle({\r\n            root: {\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                minWidth: 300,\r\n                width: '100%',\r\n            },\r\n            image: {\r\n                position: 'relative',\r\n                height: 200,\r\n                [theme.breakpoints.down('xs')]: {\r\n                    width: '100% !important', // Overrides inline-style\r\n                    height: 100,\r\n                },\r\n                '&:hover, &$focusVisible': {\r\n                    zIndex: 1,\r\n                    '& $imageBackdrop': {\r\n                        opacity: 0.15,\r\n                    },\r\n                    '& $imageMarked': {\r\n                        opacity: 0,\r\n                    },\r\n                    '& $imageTitle': {\r\n                        border: '4px solid currentColor',\r\n                    },\r\n                },\r\n            },\r\n            focusVisible: {},\r\n            imageButton: {\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                color: theme.palette.common.white,\r\n            },\r\n            imageSrc: {\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n                backgroundSize: 'cover',\r\n                backgroundPosition: 'center 40%',\r\n            },\r\n            imageBackdrop: {\r\n                position: 'absolute',\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n                backgroundColor: theme.palette.common.black,\r\n                opacity: 0.4,\r\n                transition: theme.transitions.create('opacity'),\r\n            },\r\n            imageTitle: {\r\n                position: 'relative',\r\n                padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${theme.spacing(1) + 6}px`,\r\n            },\r\n            imageMarked: {\r\n                height: 3,\r\n                width: 18,\r\n                backgroundColor: theme.palette.common.white,\r\n                position: 'absolute',\r\n                bottom: -2,\r\n                left: 'calc(50% - 9px)',\r\n                transition: theme.transitions.create('opacity'),\r\n            },\r\n        }),\r\n    );\r\n    return usingStyles();\r\n}\r\n\r\nexport function authPageStyling() {\r\n    const createStyle = makeStyles((theme) => ({\r\n        root: {\r\n            height: '100%',\r\n        },\r\n        image: {\r\n            backgroundImage: 'url(https://source.unsplash.com/random)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor:\r\n                theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n            backgroundSize: '100% 100%',\r\n            backgroundPosition: 'center',\r\n        },\r\n        paper: {\r\n            margin: theme.spacing(2, 2),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n        },\r\n        avatar: {\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n            marginTop: theme.spacing(1),\r\n        },\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n    }));\r\n    return createStyle();\r\n}\r\n\r\nexport function finalReviewStyle() {\r\n    const final = makeStyles((theme) => ({\r\n        listItem: {\r\n            padding: theme.spacing(1, 0),\r\n        },\r\n        total: {\r\n            fontWeight: 700,\r\n        },\r\n        title: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    }));\r\n    return final();\r\n}","import React from 'react';\r\nimport \"./Shop.css\"\r\nimport firstLink from '../../../assets/images/firstLink.jpg';\r\nimport secondLink from '../../../assets/images/secondLink.jpg';\r\nimport { GlobalPaths } from '../../../Services/GlobalPaths';\r\nimport { Card, CardActionArea, CardActions, CardMedia } from '@material-ui/core';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { createStyles } from '../../../Services/GlobalStylingMaker';\r\n\r\nfunction Shop() {\r\n    const classes = createStyles();\r\n    return (\r\n        <div className=\"Shop p-d-flex p-flex-wrap \">\r\n            <Card title={\"Hats\"} key={998}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={firstLink}\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                </CardActionArea>\r\n                <CardActions className=\"linkContainer\">\r\n                    <NavLink to={GlobalPaths.storeHatsLinkUrl}>Go to Hats </NavLink>\r\n                </CardActions>\r\n            </Card>\r\n            <Card title={\"Hats\"} key={999}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={secondLink}\r\n                        title=\"Contemplative Reptile\"\r\n                    />\r\n                </CardActionArea>\r\n                <CardActions className=\"linkContainer\">\r\n                    <NavLink to={GlobalPaths.storeItemsLinkUrl}>Go to items </NavLink>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shop;","class ErrorsService {\r\n\r\n    public getError(err: any) {\r\n\r\n        if (typeof err === \"string\") return err;\r\n        if (typeof err.error === \"string\") return err.error;\r\n\r\n        if (Array.isArray(err.error)) {\r\n            let allErrors = \"\";\r\n            for (const item of err.error) {\r\n                allErrors += item + \"<br>\";\r\n            }\r\n            return allErrors;\r\n        }\r\n\r\n        if (err.response?.data) return err.response.data;\r\n\r\n        if (typeof err.message === \"string\") {\r\n            if (err.message.startsWith(\"Network Error\")) {\r\n                return \"The server is down or your network \\n please try again.\";\r\n            }\r\n            return err.message;\r\n        }\r\n\r\n        return \"Some error occurred, please try again later.\";\r\n\r\n    }\r\n}\r\nexport const errorsService = new ErrorsService();\r\n\r\n","import { Notyf } from 'notyf';\nimport { errorsService } from './GlobalErrors.service'\n\nclass NotificationService {\n\n    private notyf = new Notyf({ duration: 4000, ripple: true, position: { x: \"left\", y: \"bottom\" } });\n\n    public success(message: string): void {\n        this.notyf.success(message);\n    }\n\n    public error(err: any): void {\n\n        this.notyf.error(errorsService.getError(err));\n    }\n}\n\nexport const notificationService = new NotificationService();\n","import React from 'react';\r\nimport \"./hatCard.css\";\r\nimport { Globals } from '../../../Services/Globals';\r\nimport HatModel from '../../Models/HatModel';\r\nimport { Card, CardContent, CardMedia, Fab, Typography } from '@material-ui/core';\r\nimport { createStyles } from '../../../Services/GlobalStylingMaker';\r\nimport { Add } from '@material-ui/icons';\r\nimport store from '../../../Redux/Store';\r\nimport { cartHatAddedAction } from '../../../Redux/CartState';\r\nimport { notificationService } from '../../../Services/notification.service';\r\n\r\ninterface cardProps {\r\n    hat: HatModel;\r\n}\r\n\r\nexport default function HatCard(props: cardProps): JSX.Element {\r\n    const classes = createStyles();\r\n\r\n    function addToCart(hat: HatModel) {\r\n        store.dispatch(cartHatAddedAction(hat));\r\n        notificationService.success(\"Added\");\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root + \" hatCard\"} title=\"Hat\" >\r\n            <CardMedia className={classes.media} image={Globals.hatsUrl + \"hatsImage/\" + props.hat.imageName} title={\"Woolfit Hats\"} />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n                    <h4 className=\"hatTitle\">\r\n                        Hat - {props.hat.colors}\r\n                    </h4>\r\n                    <br />\r\n                    <p className=\"hatDescription\">\r\n                       suitable for all genders\r\n                    </p>\r\n                    <span className=\"priceSpan\">\r\n                        {props.hat.price + \"$\"}\r\n                    </span>\r\n                    <Fab color=\"primary\" aria-label=\"add\" onClick={() => addToCart(props.hat)} className={classes.fab + \" addToCartButton\"}>\r\n                        Add<Add className=\"addIcon\" /> \r\n                    </Fab>\r\n                </Typography>\r\n            </CardContent >\r\n        </Card >\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"./AdminHatCard.css\";\r\nimport { Globals } from '../../../Services/Globals';\r\nimport HatModel from '../../Models/HatModel';\r\nimport { Card, CardContent, CardMedia, Fab, Typography } from '@material-ui/core';\r\nimport { createStyles } from '../../../Services/GlobalStylingMaker';\r\nimport { Delete, Edit } from '@material-ui/icons';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { notificationService } from '../../../Services/notification.service';\r\nimport axios from 'axios';\r\nimport { logoutUser } from '../../../Services/GlobalHelpers';\r\nimport { GlobalPaths } from '../../../Services/GlobalPaths';\r\n\r\ninterface cardProps {\r\n    hat: HatModel;\r\n}\r\n\r\nexport default function AdminHatCard(props: cardProps): JSX.Element {\r\n    const classes = createStyles();\r\n    const history = useHistory();\r\n\r\n    const handleDeleteHat = async () => {\r\n        try {\r\n            const answer = window.confirm(\"Are you sure?\");\r\n            if (!answer) return;\r\n            await axios.delete<HatModel>(Globals.hatsUrl + props.hat.hatId);\r\n        } catch (error) {\r\n            if (error.response?.status === 403) {\r\n                logoutUser();\r\n                notificationService.error(error)\r\n                history.push(GlobalPaths.loginLinkUrl);\r\n            } else {\r\n                notificationService.error(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root + \" AdminHatCard\"} title=\"Hat\" >\r\n            <CardMedia className={classes.media} image={Globals.hatsUrl + \"hatsImage/\" + props.hat.imageName} title={\"Woolfit Hats\"} />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n                    <h4 className=\"hatTitle\">\r\n                        Hat - {props.hat.colors}\r\n                    </h4>\r\n                    <br />\r\n                    <p className=\"hatDescription\">\r\n                        suitable for all genders\r\n                    </p>\r\n                    <span className=\"priceSpan\">\r\n                        {props.hat.price + \"$\"}\r\n                    </span>\r\n                    <Fab color=\"primary\" aria-label=\"Edit\" className={classes.fab + \" editButton\"}>\r\n                        <NavLink to={GlobalPaths.editHatUrl + \"/\" + props.hat.hatId}>\r\n                            <Edit className=\"editIcon\"></Edit>\r\n                        </NavLink>\r\n                    </Fab>\r\n                    <Fab color=\"primary\" aria-label=\"delete\" onClick={handleDeleteHat} className={classes.fab + \" deleteButton\"}>\r\n                        <Delete className=\"deleteIcon\" />\r\n                    </Fab>\r\n                </Typography>\r\n            </CardContent >\r\n        </Card >\r\n\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport \"./Hats-Items.css\";\r\nimport { Globals } from '../../../Services/Globals';\r\nimport HatModel from '../../Models/HatModel';\r\nimport Axios from \"axios\";\r\nimport store from '../../../Redux/Store';\r\nimport { hatsDownloadedAction } from '../../../Redux/HatsState';\r\nimport HatCard from '../hatCard/hatCard';\r\nimport { notificationService } from '../../../Services/notification.service';\r\nimport { Unsubscribe } from 'redux';\r\nimport authModel from '../../Models/authModel';\r\nimport { GlobalPaths } from '../../../Services/GlobalPaths';\r\nimport AdminHatCard from '../AdminHatCard/AdminHatCard';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\ninterface HatState {\r\n    hats: HatModel[];\r\n    auth: authModel;\r\n}\r\n\r\nclass Hats extends Component<{}, HatState> {\r\n    private unsubscribeFromStore: Unsubscribe;\r\n\r\n    public constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            hats: store.getState().hatsState.hats,\r\n            auth: store.getState().authState.auth\r\n        }\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        try {\r\n            this.unsubscribeFromStore = store.subscribe(() => {\r\n                const hats = store.getState().hatsState.hats;\r\n                const auth = store.getState().authState.auth;\r\n                this.setState({ hats, auth });\r\n            });\r\n\r\n            if (store.getState().hatsState.hats.length === 0) {\r\n                const response = await Axios.get<HatModel[]>(Globals.hatsUrl);\r\n                store.dispatch(hatsDownloadedAction(response.data))\r\n            }\r\n\r\n        }\r\n        catch (err) {\r\n            notificationService.error(err);\r\n        }\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeFromStore();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div key=\"container\" className=\"hat-Container\">\r\n                {this.state.auth.isLoggedIn && this.state.auth.user.isAdmin === \"royAdmin!\" ?\r\n                    <>\r\n                        {this.state.hats.map(hat => <AdminHatCard key={hat.hatId} hat={hat} />)}\r\n                        <NavLink to={GlobalPaths.addHatUrl}>Add Hat</NavLink>\r\n                    </> :\r\n                    this.state.hats.map(hat => <HatCard hat={hat} key={hat.hatId} />)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hats;\r\n","import { Button, useTheme } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { CarouselStyle } from \"../../../Services/GlobalStylingMaker\";\nimport \"./imageCarousel.css\";\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\nimport { Globals } from \"../../../Services/Globals\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\n\ninterface imageCarouselProps {\n    images: string;\n}\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\nfunction ImageCarousel(props: imageCarouselProps): JSX.Element {\n    const theme = useTheme();\n    const CarouselClasses = CarouselStyle();\n    const [activeStep, setActiveStep] = useState(0);\n\n    const images = props.images.split(\",\");\n    const maxSteps = images.length;\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleStepChange = (step: number) => {\n        setActiveStep(step);\n    };\n\n    return (\n        <div className=\"imageCarousel\">\n            <AutoPlaySwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={activeStep}\n                onChangeIndex={handleStepChange}\n                enableMouseEvents\n            >\n                {\n                    images.map((step, index) => (\n                        <div key={step}>\n                            {Math.abs(activeStep - index) <= 2 ? (\n                                <img className={CarouselClasses.img} src={Globals.itemsUrl + \"itemImages/\" + step} alt=\"item\" />\n                            ) : null}\n                        </div>\n                    ))\n                }\n            </AutoPlaySwipeableViews >\n            <Button size=\"small\" onClick={handleBack} className=\"leftImageButton\" disabled={activeStep === 0}>\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </Button>\n            <Button size=\"small\" onClick={handleNext} className=\"rightImageButton\" disabled={activeStep === maxSteps - 1}>\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </Button>\n        </div>\n    );\n}\n\nexport default ImageCarousel;\n","import React from 'react';\r\nimport \"./itemCard.css\";\r\nimport { Card, CardContent, Fab, Typography } from '@material-ui/core';\r\nimport { createStyles } from '../../../Services/GlobalStylingMaker';\r\nimport { Add } from '@material-ui/icons';\r\nimport itemsModel from '../../Models/ItemsModel';\r\nimport ImageCarousel from '../imageCarousel/imageCarousel';\r\nimport { cartItemAddedAction } from '../../../Redux/CartState';\r\nimport store from '../../../Redux/Store';\r\nimport { notificationService } from '../../../Services/notification.service';\r\n\r\ninterface itemProps {\r\n    item: itemsModel;\r\n}\r\n\r\n\r\nexport default function ItemCard(props: itemProps): JSX.Element {\r\n    const classes = createStyles();\r\n\r\n    function addToCart(item:itemsModel){\r\n        console.log(item);\r\n        store.dispatch(cartItemAddedAction(item));\r\n        notificationService.success(\"Added\");\r\n    }\r\n\r\n    return (\r\n        <Card className={\"itemCard\"} title=\"Item\" >\r\n            <ImageCarousel images={props.item.imageName} />\r\n            <CardContent className=\"cardContentItem\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n                    <span className=\"itemName\">{props.item.itemName}</span>\r\n                    <br />\r\n                    {props.item.description &&\r\n                        <>\r\n                            <span className=\"itemDescription\">{props.item.description}</span>\r\n                            <br />\r\n                        </>\r\n                    }\r\n                    {props.item.colors &&\r\n                        <>\r\n                            <span className=\"itemColor\">\r\n                                {props.item.colors}\r\n                            </span>\r\n                            <br />\r\n                        </>}\r\n                    <span className=\"priceSpan\">\r\n                        {props.item.itemPrice + \"$\"}\r\n                    </span>\r\n                        <Fab color=\"primary\" aria-label=\"add\" onClick={() => addToCart(props.item)} className={classes.fab + \" addToCartButton\"}>\r\n                           Add <Add className=\"addIcon\" /> \r\n                        </Fab>\r\n                </Typography >\r\n            </CardContent >\r\n        </Card >\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"./AdminItemCard.css\";\r\nimport { Card, CardContent, Fab, Typography } from '@material-ui/core';\r\nimport { createStyles } from '../../../Services/GlobalStylingMaker';\r\nimport { Delete, Edit } from '@material-ui/icons';\r\nimport itemsModel from '../../Models/ItemsModel';\r\nimport ImageCarousel from '../imageCarousel/imageCarousel';\r\nimport { notificationService } from '../../../Services/notification.service';\r\nimport { GlobalPaths } from '../../../Services/GlobalPaths';\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { logoutUser } from '../../../Services/GlobalHelpers';\r\nimport axios from 'axios';\r\nimport { Globals } from '../../../Services/Globals';\r\n\r\n\r\ninterface itemProps {\r\n    item: itemsModel;\r\n}\r\n\r\nexport default function AdminItemCard(props: itemProps): JSX.Element {\r\n    const classes = createStyles();\r\n    const history = useHistory();\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            const answer = window.confirm(\"Are you sure?\");\r\n            if (!answer) return;\r\n            await axios.delete<itemsModel>(Globals.itemsUrl + props.item.itemId);\r\n        } catch (error) {\r\n            if (error.response?.status === 403) {\r\n                logoutUser();\r\n                notificationService.error(error)\r\n                history.push(GlobalPaths.loginLinkUrl);\r\n            } else {\r\n                notificationService.error(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className=\"AdminItemCard\" title=\"Item\" >\r\n            <ImageCarousel images={props.item.imageName} />\r\n            <CardContent className=\"cardContentItem\">\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\">\r\n                    <span className=\"itemName\">{props.item.itemName}</span>\r\n                    <br />\r\n                    {props.item.description &&\r\n                        <>\r\n                            <span className=\"itemDescription\">{props.item.description}</span>\r\n                            <br />\r\n                        </>\r\n                    }\r\n                    {props.item.colors &&\r\n                        <>\r\n                            <span className=\"itemColor\">\r\n                                {props.item.colors}\r\n                            </span>\r\n                            <br />\r\n                        </>}\r\n                    <span className=\"priceSpan\">\r\n                        {props.item.itemPrice + \"$\"}\r\n                    </span>\r\n                    <NavLink to={GlobalPaths.editItemUrl + \"/\" + props.item.itemId}>\r\n                        <Fab color=\"primary\" aria-label=\"Edit\" className={classes.fab + \" editButton\"}>\r\n                            <Edit className=\"editIcon\"></Edit>\r\n                        </Fab>\r\n                    </NavLink>\r\n                    <Fab color=\"primary\" aria-label=\"delete\" onClick={handleDelete} className={classes.fab + \" deleteButton\"}>\r\n                        <Delete className=\"deleteIcon\" />\r\n                    </Fab>\r\n                </Typography >\r\n            </CardContent >\r\n        </Card >\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './items.css';\r\nimport Axios from 'axios';\r\nimport store from '../../../Redux/Store';\r\nimport { itemsDownloadedAction } from '../../../Redux/ItemsState';\r\nimport { Globals } from '../../../Services/Globals';\r\nimport ItemCard from '../itemCard/itemCard';\r\nimport ItemsModel from '../../Models/ItemsModel';\r\nimport { notificationService } from '../../../Services/notification.service';\r\nimport { Unsubscribe } from 'redux';\r\nimport { GlobalPaths } from '../../../Services/GlobalPaths';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport authModel from '../../Models/authModel';\r\nimport AdminItemCard from \"../AdminItemCard/AdminItemCard\"\r\n\r\n\r\ninterface itemsState {\r\n    items: ItemsModel[];\r\n    auth: authModel;\r\n}\r\n\r\nclass Items extends Component<{}, itemsState> {\r\n\r\n    private unsubscribeFromStore: Unsubscribe;\r\n\r\n    public constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            items: store.getState().itemsState.items,\r\n            auth: store.getState().authState.auth\r\n        }\r\n    }\r\n\r\n    public async componentDidMount() {\r\n        try {\r\n            this.unsubscribeFromStore = store.subscribe(() => {\r\n                const items = store.getState().itemsState.items;\r\n                const auth = store.getState().authState.auth;\r\n                this.setState({ items, auth });\r\n            });\r\n\r\n            if (store.getState().itemsState.items.length === 0) {\r\n                const response = await Axios.get<ItemsModel[]>(Globals.itemsUrl);\r\n                store.dispatch(itemsDownloadedAction(response.data))\r\n            }\r\n        }\r\n        catch (err) {\r\n            notificationService.error(err);\r\n        }\r\n    }\r\n\r\n    public componentWillUnmount(): void {\r\n        this.unsubscribeFromStore();\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <div className=\"Items p-d-flex p-flex-wrap\">\r\n                {this.state.auth.isLoggedIn && this.state.auth.user.isAdmin === \"royAdmin!\" ?\r\n                    <>\r\n                        {this.state.items.map(item => <AdminItemCard key={item.itemId} item={item} />)}\r\n                        <NavLink to={GlobalPaths.addItemUrl}>Add Item</NavLink>\r\n                    </> :\r\n                    this.state.items.map(item => <ItemCard key={item.itemId} item={item} />)\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Items;\r\n","import React from \"react\";\nimport { Button, Card, CardContent, CardMedia, Typography } from \"@material-ui/core\";\nimport { Globals } from \"../../../Services/Globals\";\nimport { createStyles } from \"../../../Services/GlobalStylingMaker\";\nimport CartModel from \"../../Models/CartModel\";\nimport \"./CartCardHat.css\";\nimport { Delete } from '@material-ui/icons';\nimport store from \"../../../Redux/Store\";\nimport { cartHatDeletedAction } from \"../../../Redux/CartState\";\n\ninterface cartCardProps {\n    cart: CartModel;\n};\n\nfunction CartCardHat(props: cartCardProps): JSX.Element {\n    const classes = createStyles();\n\n    const deleteFromCart = (hatId: number) => {\n        store.dispatch(cartHatDeletedAction(hatId));\n    }\n\n    return (\n        <Card className=\"CartCardHat-root\">\n            <CardContent>\n                <Button className=\"deleteButton\" onClick={() => deleteFromCart(props.cart.hatId)}>\n                    <Delete className=\"deleteIcon\" />\n                </Button>\n                <Typography component=\"h6\">\n                    Hat - {props.cart.colors}\n                </Typography>\n                <Typography className=\"descSpan\" component=\"p\" variant=\"subtitle2\" color=\"initial\">\n                    suitable for all genders\n                    </Typography>\n                <Typography className=\"priceHatSpan\" component=\"span\" variant=\"subtitle2\" color=\"initial\">\n                    {props.cart.price}$\n                    </Typography>\n            </CardContent>\n            <CardMedia\n                className={classes.cover}\n                image={Globals.hatsUrl + \"hatsImage/\" + props.cart.imageName}\n                title=\"Hat\"\n            />\n        </Card>\n    );\n}\n\nexport default CartCardHat;\n","import React from \"react\";\nimport { Button, Card, CardContent, Typography } from \"@material-ui/core\";\nimport CartModel from \"../../Models/CartModel\";\nimport \"./CartCardItem.css\";\nimport { Delete } from '@material-ui/icons';\nimport store from \"../../../Redux/Store\";\nimport { cartItemDeletedAction } from \"../../../Redux/CartState\";\nimport ImageCarousel from \"../../ShopArea/imageCarousel/imageCarousel\";\n\ninterface cartCardProps {\n    cart: CartModel;\n};\n\nfunction CartCardItem(props: cartCardProps): JSX.Element {\n    const deleteFromCart = (itemId: number) => {\n        store.dispatch(cartItemDeletedAction(itemId));\n    }\n\n    return (\n        <Card className=\"CartCardItem-root\">\n            <CardContent >\n                <Button className=\"deleteButton\" onClick={() => deleteFromCart(props.cart.itemId)}>\n                    <Delete className=\"deleteIcon\" />\n                </Button>\n                <Typography component=\"h6\">\n                    {props.cart.itemName}\n                </Typography>\n                <Typography className=\"descriptionParagraph\" component=\"p\" variant=\"subtitle2\" color=\"initial\">\n                    {props.cart.description}\n                </Typography>\n                <Typography className=\"priceItemSpan\" component=\"span\" variant=\"subtitle2\" color=\"initial\">\n                    {props.cart.itemPrice}$\n                    </Typography>\n            </CardContent>\n            <ImageCarousel images={props.cart.imageName} />\n        </Card>\n    );\n}\n\nexport default CartCardItem;\n","import React, { Component } from \"react\";\nimport { Unsubscribe } from \"redux\";\nimport store from \"../../../Redux/Store\";\nimport CartModel from \"../../Models/CartModel\";\nimport CartCardHat from \"../CartCardHat/CartCardHat\";\nimport CartCardItem from \"../CartCardItem/CartCardItem\";\nimport { Store, AttachMoney, Payment } from '@material-ui/icons/';\nimport { NavLink } from \"react-router-dom\";\nimport \"./CartShop.css\";\nimport { Button } from \"@material-ui/core\";\nimport { updatePriceAction } from \"../../../Redux/CartState\";\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\n\ninterface cartsState {\n    carts: CartModel[];\n    price: number;\n}\n\nclass CartShop extends Component<{}, cartsState> {\n\n    public unSubscribeFromStore: Unsubscribe;\n\n    public constructor(props: {}) {\n        super(props);\n        this.state = {\n            carts: store.getState().cartState.cart,\n            price: 0\n        }\n    }\n\n    public componentDidMount() {\n        this.unSubscribeFromStore = store.subscribe(() => {\n            let price = 0;\n            const carts = store.getState().cartState.cart;\n            this.setState({ carts })\n            for (const item of this.state.carts) {\n                item.price ? price += item.price : price += item.itemPrice;\n            }\n            this.setState({ price })\n        })\n\n        if (this.state.price === 0) {\n            let price = 0;\n            for (const item of this.state.carts) {\n                item.price ? price += item.price : price += item.itemPrice;\n            }\n            store.dispatch(updatePriceAction(price));\n            this.setState({ price })\n\n        }\n    }\n\n    public componentWillUnmount() {\n        this.unSubscribeFromStore();\n    }\n\n    render() {\n        return (\n            <div className=\"CartShop\" >\n                {!this.state.carts.length &&\n                    <h3>Your Store Cart Is Empty <Store className=\"storeIcon\" /></h3>\n                }\n                {this.state.carts.length > 0 &&\n                    <>\n                        <h3>\n                            Shopping Cart <Store className=\"storeIcon\" />\n                        </h3>\n                        <div className=\"cardContainer\">\n                            {this.state.carts.map((cart, index) => cart.hatId ? <CartCardHat key={index} cart={cart} /> : <CartCardItem key={index} cart={cart} />)}\n                        </div>\n                        <div className=\"totalPriceCheckout\">\n                            <h3>Subtotal: {this.state.price} <AttachMoney className=\"usdIcon\" /></h3>\n                            <Button variant=\"contained\" className=\"buttonCheckout\">\n                                <NavLink to={GlobalPaths.paymentUrl}>Checkout <Payment className=\"paymentIcon\" /></NavLink>\n                            </Button>\n                        </div>\n                    </>\n                }\n            </div >\n        )\n    };\n}\n\nexport default CartShop;\n","import React, { useEffect, useRef } from 'react';\nimport { NavLink } from \"react-router-dom\";\nimport { GlobalPaths } from '../../../Services/GlobalPaths';\nimport { authPageStyling } from '../../../Services/GlobalStylingMaker';\nimport \"./Login.css\";\nimport LoginModel from '../../Models/LoginModel';\nimport { useForm } from 'react-hook-form';\nimport store from '../../../Redux/Store';\nimport axios from 'axios';\nimport { Globals } from '../../../Services/Globals';\nimport { notificationService } from '../../../Services/notification.service';\nimport { authLoggedInAction } from '../../../Redux/AuthState';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Avatar, Box, Button, CssBaseline, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\nimport { socketManagerInstance } from '../../../Socket.io/SocketManager';\nimport { authorizationHeader } from '../../../Services/GlobalHelpers';\n\n\nfunction Login({ history }) {\n    const classes = authPageStyling();\n\n    let registered = useRef<LoginModel>();\n    const { register, handleSubmit } = useForm<LoginModel>();\n\n    useEffect(() => {\n        //Handling unauthorized behavior of user;\n        if (store.getState().authState.auth.isLoggedIn) {\n            history.push(\"/page404\");\n        }\n\n        //After registration rendering the username that has been registered;\n        if (!store.getState().authState.auth.isLoggedIn && store.getState().authState.auth.user) {\n            registered.current = store.getState().authState.auth.user;\n        };\n    })\n\n    //Handling login form submit;\n    async function send(user: LoginModel) {\n        try {\n            const response = await axios.post<LoginModel>(Globals.authUrl + \"login\", user);\n            const userLogged = response.data;\n            store.dispatch(authLoggedInAction(userLogged));\n\n            //Start listen to socket.io\n            socketManagerInstance.connect();\n\n            //function from Global function services that will add to Axios header user token.\n            authorizationHeader(userLogged);\n\n            history.push(GlobalPaths.homeLinkUrl);\n        } catch (err) {\n            notificationService.error(err);\n        }\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlined />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                </Typography>\n                    <form className={classes.form} onSubmit={handleSubmit(send)}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            type=\"email\"\n                            id=\"email\"\n                            inputRef={register}\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            inputRef={register}\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                    </Button>\n                        <Grid container>\n                            <Grid item>\n                                <NavLink to={GlobalPaths.registerLinkUrl} variant=\"body2\" align=\"center\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </NavLink>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                                Copyright © Store Roy Elmakies {new Date().getFullYear()}\n                            </Typography>\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport \"./Register.css\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport { Globals } from \"../../../Services/Globals\";\nimport store from \"../../../Redux/Store\";\nimport { authRegisteredAction } from \"../../../Redux/AuthState\";\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\nimport { notificationService } from \"../../../Services/notification.service\";\nimport { authPageStyling } from \"../../../Services/GlobalStylingMaker\";\nimport { Avatar, Box, Button, CssBaseline, Grid, Paper, TextField, Typography } from \"@material-ui/core\";\nimport { LockOutlined } from \"@material-ui/icons\";\nimport { socketManagerInstance } from \"../../../Socket.io/SocketManager\";\nimport { authorizationHeader } from \"../../../Services/GlobalHelpers\";\nimport LoginModel from \"../../Models/LoginModel\";\n\n\nfunction Register({ history }): JSX.Element {\n\n    const classes = authPageStyling();\n\n    const { register, handleSubmit } = useForm<LoginModel>();\n\n    useEffect(() => {\n        if (store.getState().authState.auth.isLoggedIn) {\n            history.push(\"/page404\");\n        }\n    });\n\n    //Handling submit of registration form;\n    async function send(newUser: LoginModel) {\n        try {\n            await axios.post<LoginModel>(Globals.authUrl + \"register\", newUser);\n            store.dispatch(authRegisteredAction(newUser));\n            //Start listen to socket.io\n            socketManagerInstance.connect();\n\n            //function from Global function services that will add to Axios header user token.\n            authorizationHeader(newUser);\n            history.push(GlobalPaths.homeLinkUrl);\n        }\n        catch (err) {\n            notificationService.error(err);\n        }\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlined />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign Up\n                    </Typography>\n                    <form className={classes.form} onSubmit={handleSubmit(send)}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    autoComplete=\"fname\"\n                                    name=\"firstName\"\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    inputRef={register}\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    inputRef={register}\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    inputRef={register}\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    inputRef={register}\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <NavLink to={GlobalPaths.loginLinkUrl} variant=\"body2\" align=\"center\">\n                                    {\"Have an account? Sign in\"}\n                                </NavLink>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n                                Copyright © Store Roy Elmakies {new Date().getFullYear()}\n                            </Typography>\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Register;\n","import React from 'react';\r\nimport { Typography, TextField, Grid } from '@material-ui/core';\r\nimport orderModel from '../../Models/orderModel';\r\nimport { useForm } from 'react-hook-form';\r\n\r\ninterface addressFormProps {\r\n    handleAddressChange: any,\r\n    addressState: orderModel\r\n}\r\n\r\nexport default function AddressForm(props: addressFormProps) {\r\n\r\n    const { register } = useForm<orderModel>({ defaultValues: props.addressState });\r\n\r\n    return (\r\n        <form>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        inputRef={register}\r\n                        onChange={props.handleAddressChange(\"firstName\")}\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        label=\"First name\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        inputRef={register}\r\n                        onChange={props.handleAddressChange(\"lastName\")}\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        label=\"Last name\"\r\n                        fullWidth\r\n                        autoComplete=\"family-name\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        inputRef={register}\r\n                        id=\"address\"\r\n                        onChange={props.handleAddressChange(\"address\")}\r\n                        name=\"address\"\r\n                        label=\"Address\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-line1\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        inputRef={register}\r\n                        onChange={props.handleAddressChange(\"city\")}\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping address-level2\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        inputRef={register}\r\n                        onChange={props.handleAddressChange(\"zip\")}\r\n                        id=\"zip\"\r\n                        name=\"zip\"\r\n                        label=\"Zip / Postal code\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping postal-code\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"country\"\r\n                        inputRef={register}\r\n                        onChange={props.handleAddressChange(\"country\")}\r\n                        name=\"country\"\r\n                        label=\"Country\"\r\n                        fullWidth\r\n                        autoComplete=\"shipping country\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}","import React from 'react';\r\nimport { Typography, Grid, TextField } from '@material-ui/core';\r\nimport { CreditCard } from '@material-ui/icons';\r\nimport creditCardModel from '../../Models/creditCardModel';\r\nimport { useForm } from 'react-hook-form';\r\n\r\ninterface addressFormProps {\r\n    handlePaymentChange: any,\r\n    paymentState: creditCardModel\r\n}\r\n\r\nfunction PaymentForm(props: addressFormProps) {\r\n    const { register } = useForm<creditCardModel>({ defaultValues: props.paymentState })\r\n\r\n    function changeDateFormat() {\r\n        const fullYear = new Date().getFullYear();\r\n        let fullMonth = (new Date().getMonth() + 1).toString();\r\n        if (fullMonth < \"10\") fullMonth = '0' + fullMonth;\r\n        return `${fullYear}-0${fullMonth}`;\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Credit Card DEMO!!: <CreditCard />\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"cardName\"\r\n                        name=\"nameOnCard\"\r\n                        inputRef={register}\r\n                        onChange={props.handlePaymentChange(\"nameOnCard\")}\r\n                        label=\"Name on card\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-name\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        name=\"cardNumber\"\r\n                        id=\"cardNumber\"\r\n                        inputRef={register}\r\n                        onChange={props.handlePaymentChange(\"cardNumber\")}\r\n                        label=\"Card number\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-number\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"expDate\"\r\n                        name=\"expiryDate\"\r\n                        label=\"Expiry date\"\r\n                        inputRef={register}\r\n                        type=\"month\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        onChange={props.handlePaymentChange(\"expiryDate\")}\r\n                        inputProps={{ min: changeDateFormat() }}\r\n                        fullWidth\r\n                        autoComplete=\"cc-exp\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"cvv\"\r\n                        name=\"cvv\"\r\n                        label=\"CVV\"\r\n                        inputRef={register}\r\n                        onChange={props.handlePaymentChange(\"cvv\")}\r\n                        helperText=\"Last three digits on signature strip\"\r\n                        fullWidth\r\n                        autoComplete=\"cc-csc\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default PaymentForm;","import React, { useEffect, useState } from 'react';\r\nimport { Typography, List, ListItem, ListItemText, Grid } from '@material-ui/core';\r\nimport store from '../../../Redux/Store';\r\nimport { finalReviewStyle } from '../../../Services/GlobalStylingMaker';\r\nimport orderModel from '../../Models/orderModel';\r\nimport creditCardModel from '../../Models/creditCardModel';\r\n\r\ninterface FinalReviewProps {\r\n    addressState: orderModel,\r\n    paymentState: creditCardModel,\r\n}\r\n\r\nexport default function FinalReview(props: FinalReviewProps) {\r\n\r\n    const payments = [\r\n        { name: 'Card holder', detail: props.paymentState.nameOnCard },\r\n        { name: 'Card number', detail: props.paymentState.cardNumber },\r\n        { name: 'Expiry date', detail: props.paymentState.expiryDate },\r\n    ];\r\n    const classes = finalReviewStyle();\r\n    const products = store.getState().cartState.cart;\r\n    const [price, setPrice] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        let newPrice = 0;\r\n        products.map(product => product.price ? newPrice += product.price : newPrice += product.itemPrice);\r\n        setPrice(newPrice);\r\n    }, [products])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Order summary\r\n            </Typography>\r\n            <List disablePadding>\r\n                {products.map((product, index) => (\r\n                    <ListItem className={classes.listItem} key={index}>\r\n                        <ListItemText primary={product.itemName ? product.itemName : \"Hat\"} secondary={product.description ? product.description : \"suitable for all genders\"} />\r\n                        <Typography variant=\"body2\">{product.price ? product.price : product.itemPrice}$</Typography>\r\n                    </ListItem>\r\n                ))}\r\n                <ListItem className={classes.listItem}>\r\n                    <ListItemText primary=\"Total\" />\r\n                    <Typography variant=\"subtitle1\" className={classes.total}>\r\n                        {price}$\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                        Shipping\r\n                    </Typography>\r\n                    <Typography gutterBottom>{props.addressState.firstName} {props.addressState.lastName}</Typography>\r\n                    <Typography gutterBottom>{props.addressState.address}</Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" xs={12} sm={6}>\r\n                    <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                        Payment details\r\n                    </Typography>\r\n                    <Grid container>\r\n                        {payments.map(payment => (\r\n                            <React.Fragment key={payment.name}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography gutterBottom>{payment.detail}</Typography>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","class orderModel {\r\n    public firstName: string;\r\n    public lastName: string;\r\n    public address: string;\r\n    public city: string;\r\n    public zip: string;\r\n    public country: string;\r\n}\r\n\r\nexport default orderModel;","class creditCardModel {\r\n    public nameOnCard:string;\r\n    public cardNumber:string;\r\n    public expiryDate:string;\r\n    public cvv:string;\r\n}\r\n\r\nexport default creditCardModel;","import React, { ChangeEvent, Component } from 'react';\r\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Button, Typography } from '@material-ui/core';\r\nimport AddressForm from '../AddressForm/AddressForm';\r\nimport PaymentForm from '../PaymentForm/PaymentForm';\r\nimport FinalReview from '../FinalReview/FinalReview';\r\nimport \"./Checkout.css\";\r\nimport orderModel from '../../Models/orderModel';\r\nimport creditCardModel from '../../Models/creditCardModel';\r\n\r\ninterface CheckoutState {\r\n    activeStep: number,\r\n    addressState: orderModel,\r\n    paymentState: creditCardModel,\r\n    addressComplete: boolean,\r\n    paymentComplete: boolean\r\n}\r\n\r\n\r\nclass Checkout extends Component<{}, CheckoutState> {\r\n    public steps = ['Shipping address', 'Payment details', 'Review your order'];\r\n\r\n    public constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            activeStep: 0,\r\n            addressState: new orderModel(),\r\n            paymentState: new creditCardModel(),\r\n            addressComplete: false,\r\n            paymentComplete: false\r\n        }\r\n    }\r\n\r\n    private handleAddressChange = (input: string) => (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            addressState: {\r\n                ...this.state.addressState,\r\n                [input]: e.target.value !== \"\" ? e.target.value : undefined\r\n            }\r\n        }, () => {\r\n            for (const item in this.state.addressState) {\r\n                if (this.state.addressState[item] === undefined)\r\n                    return this.setState({ addressComplete: false });\r\n            }\r\n            this.setState({ addressComplete: true });\r\n        });\r\n    };\r\n\r\n    private handlePaymentChange = (input: string) => (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            paymentState: {\r\n                ...this.state.paymentState,\r\n                [input]: e.target.value !== \"\" ? e.target.value : undefined\r\n            }\r\n        }, () => {\r\n            for (const item in this.state.paymentState) {\r\n                if (this.state.paymentState[item] === undefined)\r\n                    return this.setState({ paymentComplete: false });\r\n            }\r\n            this.setState({ paymentComplete: true });\r\n        });\r\n    };\r\n\r\n    private handleNext = () => {\r\n        const activeStep = this.state.activeStep + 1;\r\n        this.setState({ activeStep })\r\n    };\r\n\r\n    private handleBack = () => {\r\n        const activeStep = this.state.activeStep - 1;\r\n        this.setState({ activeStep })\r\n    };\r\n\r\n    private getStepContent = step => {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm\r\n                    handleAddressChange={this.handleAddressChange}\r\n                    addressState={this.state.addressState}\r\n                />;\r\n            case 1:\r\n                return <PaymentForm\r\n                    handlePaymentChange={this.handlePaymentChange}\r\n                    paymentState={this.state.paymentState}\r\n                />;\r\n            case 2:\r\n                return <FinalReview\r\n                    addressState={this.state.addressState}\r\n                    paymentState={this.state.paymentState}\r\n                />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Checkout\">\r\n                <CssBaseline />\r\n                <Paper className=\"paperTag\">\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Checkout\r\n                    </Typography>\r\n                    <Stepper activeStep={this.state.activeStep} className=\"stepperTag\">\r\n                        {this.steps.map(label => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {this.state.activeStep === this.steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                Thank you for your order.\r\n                        </Typography>\r\n                            <Typography variant=\"subtitle1\">\r\n                                Your order number is #2001539. We have emailed your order confirmation, and will\r\n                                send you an update when your order has shipped.\r\n                                ty for checking our web :D,\r\n                            <br />\r\n                            Build By Roy Elmakies\r\n                        </Typography>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            {this.getStepContent(this.state.activeStep)}\r\n                            <div className=\"buttonsTag\">\r\n                                {this.state.activeStep !== 0 ?\r\n                                    <>\r\n                                        <Button onClick={this.handleBack} className=\"buttonTag\">\r\n                                            Back\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={this.handleNext}\r\n                                            className=\"buttonTag\"\r\n                                            disabled={!this.state.paymentComplete}\r\n                                        >\r\n                                            {this.state.activeStep === this.steps.length - 1 ? 'Order!' : 'Next'}\r\n                                        </Button>\r\n                                    </> :\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={this.handleNext}\r\n                                        className=\"buttonTag\"\r\n                                        disabled={!this.state.addressComplete}\r\n                                    >\r\n                                        {this.state.activeStep === this.steps.length - 1 ? 'Order!' : 'Next'}\r\n                                    </Button>\r\n                                }\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React, { useEffect } from \"react\";\nimport { Button, ButtonGroup, TextField, ThemeProvider, Typography } from \"@material-ui/core\";\nimport { Clear, Send, Add } from \"@material-ui/icons\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./AddItem.css\";\nimport ItemsModel from \"../../Models/ItemsModel\";\nimport store from \"../../../Redux/Store\";\nimport axios from \"axios\";\nimport { Globals } from \"../../../Services/Globals\";\nimport { notificationService } from \"../../../Services/notification.service\";\nimport { createTheme, creatingClasses } from '../../../Services/GlobalStylingMaker';\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\nimport { logoutUser } from \"../../../Services/GlobalHelpers\";\n\n\nfunction AddItem(): JSX.Element {\n\n    const { register, handleSubmit } = useForm<ItemsModel>();\n    const history = useHistory();\n\n\n    //importing styles from Global function; \n    const theme = createTheme();\n    const classes = creatingClasses();\n\n    //Handling unauthorized behavior of user\n    useEffect(() => {\n        if (!store.getState().authState.auth.isLoggedIn || !store.getState().authState.auth.user.isAdmin) {\n            return history.push(\"/page404\");\n        }\n    })\n\n    async function submit(newItem: ItemsModel) {\n        try {\n            const myFormData = new FormData();\n            myFormData.append(\"itemName\", newItem.itemName);\n            newItem.description && myFormData.append(\"description\", newItem.description);\n            newItem.colors && myFormData.append(\"colors\", newItem.colors);\n            myFormData.append(\"itemPrice\", newItem.itemPrice.toString());\n            myFormData.append(\"newImage\", newItem.newImage.item(0));\n            await axios.post<ItemsModel>(Globals.itemsUrl, myFormData);\n            notificationService.success(\"Item added\")\n            history.push(GlobalPaths.storeItemsLinkUrl)\n\n        } catch (error) {\n            //if user token has been expired he will be logout and rotate to Login Page\n            if (error.response?.status === 403) {\n                logoutUser();\n                notificationService.error(error)\n                history.push(GlobalPaths.loginLinkUrl);\n            } else {\n                notificationService.error(error)\n            }\n        }\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"AddItem\">\n                <form method=\"POST\" onSubmit={handleSubmit(submit)} encType=\"multipart/form-data\">\n                    <Typography variant=\"h3\">\n                        <Add />\n                        Add Item\n                    </Typography>\n\n                    <TextField\n                        name=\"itemName\" inputRef={register}\n                        label=\"Item Name\" variant=\"outlined\" className={classes.textBox}\n                        inputProps={{ minLength: 3, maxLength: 500 }}\n                        required />\n                    <br />\n\n                    <TextField\n                        name=\"description\" inputRef={register}\n                        inputProps={{ type: \"textarea\", minLength: 3, maxLength: 1000 }}\n                        label=\"Description\" type=\"textarea\" variant=\"outlined\" className={classes.textBox}\n                        multiline\n                    />\n                    <br />\n\n                    <TextField\n                        name=\"colors\" inputRef={register}\n                        inputProps={{ minLength: 3, maxLength: 1000 }}\n                        label=\"Colors\" variant=\"outlined\" className={classes.textBox}\n                    />\n                    <br />\n\n                    <TextField name=\"itemPrice\"\n                        inputProps={{ step: \"0.01\", min: 10, max: 20000 }}\n                        inputRef={register} label=\"Price\"\n                        type=\"number\" variant=\"outlined\" className={classes.textBox} required />\n                    <br />\n\n                    <TextField name=\"newImage\" inputRef={register}\n                        InputLabelProps={{ shrink: true }}\n                        inputProps={{ accept: \"image/*\" }}\n                        label=\"Image\" type=\"file\" variant=\"outlined\"\n                        className={classes.textBox} required\n                    />\n                    <br />\n\n                    <ButtonGroup fullWidth variant=\"contained\" >\n                        <Button color=\"primary\" fullWidth type=\"submit\" startIcon={<Send />}>Send</Button>\n                        <Button color=\"secondary\" fullWidth type=\"reset\" startIcon={<Clear />}>Clear</Button>\n                    </ButtonGroup>\n                </form>\n            </div>\n        </ThemeProvider >\n    );\n}\n\nexport default AddItem;\n","import React, { useEffect } from \"react\";\nimport { Button, ButtonGroup, TextField, ThemeProvider, Typography } from \"@material-ui/core\";\nimport { Clear, Send, Edit } from \"@material-ui/icons\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport \"./EditItem.css\";\nimport ItemsModel from \"../../Models/ItemsModel\";\nimport store from \"../../../Redux/Store\";\nimport axios from \"axios\";\nimport { Globals } from \"../../../Services/Globals\";\nimport { notificationService } from \"../../../Services/notification.service\";\nimport { createTheme, creatingClasses } from '../../../Services/GlobalStylingMaker';\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\nimport { logoutUser } from \"../../../Services/GlobalHelpers\";\n\n\nfunction EditItem(): JSX.Element {\n\n    const { itemId } = useParams();\n    const item = store.getState().itemsState.items.find(i => i.itemId.toString() === itemId);\n    const { register, handleSubmit } = useForm<ItemsModel>({ defaultValues: item ? item : undefined });\n    const history = useHistory();\n\n    //importing styles from Global function; \n    const theme = createTheme();\n    const classes = creatingClasses();\n\n    //Handling unauthorized behavior of user\n    useEffect(() => {\n        if (!store.getState().authState.auth.isLoggedIn || !store.getState().authState.auth.user.isAdmin) {\n            return history.push(\"/page404\");\n        }\n    })\n\n    async function submit(newItem: ItemsModel) {\n        try {\n            const myFormData = new FormData();\n            myFormData.append(\"itemName\", newItem.itemName);\n            newItem.description && myFormData.append(\"description\", newItem.description);\n            newItem.colors && myFormData.append(\"colors\", newItem.colors);\n            myFormData.append(\"itemPrice\", newItem.itemPrice.toString());\n            myFormData.append(\"imageName\", item.imageName);\n            if (newItem.newImage.item(0) !== null) {\n                myFormData.append(\"newImage\", newItem.newImage.item(0));\n            }\n            await axios.put<ItemsModel>(Globals.itemsUrl + itemId, myFormData);\n            notificationService.success(\"Item Edited\")\n            history.push(GlobalPaths.storeItemsLinkUrl)\n\n        } catch (error) {\n            //if user token has been expired he will be logout and rotate to Login Page\n            if (error.response?.status === 403) {\n                logoutUser();\n                notificationService.error(error)\n                history.push(GlobalPaths.loginLinkUrl);\n            } else {\n                notificationService.error(error)\n            }\n        }\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"EditItem\">\n                <form method=\"POST\" onSubmit={handleSubmit(submit)} encType=\"multipart/form-data\">\n                    <Typography variant=\"h3\">\n                        <Edit />\n                        Edit Item\n                    </Typography>\n\n                    <TextField\n                        name=\"itemName\" inputRef={register}\n                        label=\"Item Name\" variant=\"outlined\" className={classes.textBox}\n                        inputProps={{ minLength: 3, maxLength: 500 }}\n                        required />\n                    <br />\n\n                    <TextField\n                        name=\"description\" inputRef={register}\n                        inputProps={{ type: \"textarea\", minLength: 3, maxLength: 1000 }}\n                        label=\"Description\" type=\"textarea\" variant=\"outlined\" className={classes.textBox}\n                        multiline\n                    />\n                    <br />\n\n                    <TextField\n                        name=\"colors\" inputRef={register}\n                        inputProps={{ minLength: 3, maxLength: 1000 }}\n                        label=\"Colors\" variant=\"outlined\" className={classes.textBox}\n                    />\n                    <br />\n\n                    <TextField name=\"itemPrice\"\n                        inputProps={{ step: \"0.01\", min: 10, max: 20000 }}\n                        inputRef={register} label=\"Price\"\n                        type=\"number\" variant=\"outlined\" className={classes.textBox} required />\n                    <br />\n\n                    <TextField name=\"newImage\" inputRef={register}\n                        InputLabelProps={{ shrink: true }}\n                        inputProps={{ accept: \"image/*\" }}\n                        label=\"Image\" type=\"file\" variant=\"outlined\"\n                        className={classes.textBox}\n                    />\n                    <br />\n\n                    <ButtonGroup fullWidth variant=\"contained\" >\n                        <Button color=\"primary\" fullWidth type=\"submit\" startIcon={<Send />}>Send</Button>\n                        <Button color=\"secondary\" fullWidth type=\"reset\" startIcon={<Clear />}>Clear</Button>\n                    </ButtonGroup>\n                </form>\n            </div>\n        </ThemeProvider >\n    );\n}\n\nexport default EditItem;\n","import React, { useEffect } from \"react\";\nimport { Button, ButtonGroup, TextField, ThemeProvider, Typography } from \"@material-ui/core\";\nimport { Clear, Send, Add } from \"@material-ui/icons\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./AddHat.css\";\nimport ItemsModel from \"../../Models/ItemsModel\";\nimport store from \"../../../Redux/Store\";\nimport axios from \"axios\";\nimport { Globals } from \"../../../Services/Globals\";\nimport { notificationService } from \"../../../Services/notification.service\";\nimport { createTheme, creatingClasses } from '../../../Services/GlobalStylingMaker';\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\nimport { logoutUser } from \"../../../Services/GlobalHelpers\";\nimport HatModel from \"../../Models/HatModel\";\n\n\nfunction AddHat(): JSX.Element {\n\n    const { register, handleSubmit } = useForm<HatModel>();\n    const history = useHistory();\n\n    //importing styles from Global function; \n    const theme = createTheme();\n    const classes = creatingClasses();\n\n    //Handling unauthorized behavior of user\n    useEffect(() => {\n        if (!store.getState().authState.auth.isLoggedIn || !store.getState().authState.auth.user.isAdmin) {\n            return history.push(\"/page404\");\n        }\n    })\n\n    async function submit(newHat: HatModel) {\n        try {\n            const myFormData = new FormData();\n            myFormData.append(\"colors\", newHat.colors);\n            myFormData.append(\"price\", newHat.price.toString());\n            myFormData.append(\"newImage\", newHat.newImage.item(0));\n            await axios.post<ItemsModel>(Globals.hatsUrl, myFormData);\n            notificationService.success(\"Hat added\")\n            history.push(GlobalPaths.storeHatsLinkUrl)\n\n        } catch (error) {\n            //if user token has been expired he will be logout and rotate to Login Page\n            if (error.response?.status === 403) {\n                logoutUser();\n                notificationService.error(error)\n                history.push(GlobalPaths.loginLinkUrl);\n            } else {\n                notificationService.error(error)\n            }\n        }\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"AddHat\">\n                <form method=\"POST\" onSubmit={handleSubmit(submit)} encType=\"multipart/form-data\">\n                    <Typography variant=\"h3\">\n                        <Add />\n                        Add Hat\n                    </Typography>\n\n                    <TextField\n                        name=\"colors\" inputRef={register}\n                        inputProps={{ minLength: 3, maxLength: 1000 }}\n                        label=\"Colors\" variant=\"outlined\" className={classes.textBox}\n                        required\n                    />\n                    <br />\n\n                    <TextField name=\"price\"\n                        inputProps={{ step: \"0.01\", min: 10, max: 20000 }}\n                        inputRef={register} label=\"Price\"\n                        type=\"number\" variant=\"outlined\" className={classes.textBox} required />\n                    <br />\n\n                    <TextField name=\"newImage\" inputRef={register}\n                        InputLabelProps={{ shrink: true }}\n                        inputProps={{ accept: \"image/*\" }}\n                        label=\"Image\" type=\"file\" variant=\"outlined\"\n                        className={classes.textBox} required\n                    />\n                    <br />\n\n                    <ButtonGroup fullWidth variant=\"contained\" >\n                        <Button color=\"primary\" fullWidth type=\"submit\" startIcon={<Send />}>Send</Button>\n                        <Button color=\"secondary\" fullWidth type=\"reset\" startIcon={<Clear />}>Clear</Button>\n                    </ButtonGroup>\n                </form>\n            </div>\n        </ThemeProvider >\n    );\n}\n\nexport default AddHat;\n","import React, { useEffect } from \"react\";\nimport { Button, ButtonGroup, TextField, ThemeProvider, Typography } from \"@material-ui/core\";\nimport { Clear, Send, Edit } from \"@material-ui/icons\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport \"./EditHat.css\";\nimport store from \"../../../Redux/Store\";\nimport axios from \"axios\";\nimport { Globals } from \"../../../Services/Globals\";\nimport { notificationService } from \"../../../Services/notification.service\";\nimport { createTheme, creatingClasses } from '../../../Services/GlobalStylingMaker';\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\nimport { logoutUser } from \"../../../Services/GlobalHelpers\";\nimport HatModel from \"../../Models/HatModel\";\n\n\nfunction EditHat(): JSX.Element {\n\n    const { hatId } = useParams();\n    const hat = store.getState().hatsState.hats.find(i => i.hatId.toString() === hatId);\n    const { register, handleSubmit } = useForm<HatModel>({ defaultValues: hat ? hat : undefined });\n    const history = useHistory();\n\n    //importing styles from Global function; \n    const theme = createTheme();\n    const classes = creatingClasses();\n\n    //Handling unauthorized behavior of user\n    useEffect(() => {\n        if (!store.getState().authState.auth.isLoggedIn || !store.getState().authState.auth.user.isAdmin) {\n            return history.push(\"/page404\");\n        }\n    })\n\n    async function submit(editedHat: HatModel) {\n        try {\n            const myFormData = new FormData();\n            myFormData.append(\"colors\", editedHat.colors);\n            myFormData.append(\"price\", editedHat.price.toString());\n            myFormData.append(\"imageName\", hat.imageName);\n            if (editedHat.newImage.item(0) !== null) {\n                myFormData.append(\"newImage\", editedHat.newImage.item(0));\n            }\n            await axios.put<HatModel>(Globals.hatsUrl + hatId, myFormData);\n            notificationService.success(\"Hat Edited\")\n            history.push(GlobalPaths.storeHatsLinkUrl)\n\n        } catch (error) {\n            //if user token has been expired he will be logout and rotate to Login Page\n            if (error.response?.status === 403) {\n                logoutUser();\n                notificationService.error(error)\n                history.push(GlobalPaths.loginLinkUrl);\n            } else {\n                notificationService.error(error)\n            }\n        }\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"EditHat\">\n                <form method=\"POST\" onSubmit={handleSubmit(submit)} encType=\"multipart/form-data\">\n                    <Typography variant=\"h3\">\n                        <Edit />\n                        Edit Hat\n                    </Typography>\n\n                    <TextField\n                        name=\"colors\" inputRef={register}\n                        inputProps={{ minLength: 3, maxLength: 1000 }}\n                        label=\"Colors\" variant=\"outlined\" className={classes.textBox}\n                        required\n                    />\n                    <br />\n\n                    <TextField name=\"price\"\n                        inputProps={{ step: \"0.01\", min: 10, max: 20000 }}\n                        inputRef={register} label=\"Price\"\n                        type=\"number\" variant=\"outlined\" className={classes.textBox} required />\n                    <br />\n\n                    <TextField name=\"newImage\" inputRef={register}\n                        InputLabelProps={{ shrink: true }}\n                        inputProps={{ accept: \"image/*\" }}\n                        label=\"Image\" type=\"file\" variant=\"outlined\"\n                        className={classes.textBox}\n                    />\n                    <br />\n\n                    <ButtonGroup fullWidth variant=\"contained\" >\n                        <Button color=\"primary\" fullWidth type=\"submit\" startIcon={<Send />}>Send</Button>\n                        <Button color=\"secondary\" fullWidth type=\"reset\" startIcon={<Clear />}>Clear</Button>\n                    </ButtonGroup>\n                </form>\n            </div>\n        </ThemeProvider >\n    );\n}\n\nexport default EditHat;\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"../Home/Home\";\r\nimport Page404 from \"../Page404/Page404\";\r\nimport About from '../../About/About'\r\nimport Shop from \"../../ShopArea/Shop/Shop\";\r\nimport HatsItems from \"../../ShopArea/Hats-items/Hats-Items\";\r\nimport items from \"../../ShopArea/items/items\";\r\nimport { GlobalPaths } from \"../../../Services/GlobalPaths\";\r\nimport CartShop from \"../../CartArea/CartShop/CartShop\";\r\nimport Login from \"../../UserArea/Login/Login\";\r\nimport Register from \"../../UserArea/Register/Register\";\r\nimport Checkout from \"../../CartArea/Checkout/Checkout\";\r\nimport AddItem from \"../../ShopArea/AddItem/AddItem\";\r\nimport EditItem from \"../../ShopArea/EditItem/EditItem\";\r\nimport AddHat from \"../../ShopArea/AddHat/AddHat\";\r\nimport EditHat from \"../../ShopArea/EditHat/EditHat\";\r\n\r\nfunction Routing(): JSX.Element {\r\n\r\n    return (\r\n        <div className=\"Routing\">\r\n            <Switch>\r\n                <Route path={GlobalPaths.homeLinkUrl} component={Home} exact />\r\n                <Route path={GlobalPaths.aboutLinkUrl} component={About} exact />\r\n                <Route path={GlobalPaths.storeLinkUrl} component={Shop} exact />\r\n                <Route path={GlobalPaths.storeHatsLinkUrl} component={HatsItems} exact />\r\n                <Route path={GlobalPaths.storeItemsLinkUrl} component={items} exact />\r\n                <Route path={GlobalPaths.loginLinkUrl} component={Login} exact />\r\n                <Route path={GlobalPaths.registerLinkUrl} component={Register} exact />\r\n                <Route path={GlobalPaths.cartShopUrl} component={CartShop} exact />\r\n                <Route path={GlobalPaths.paymentUrl} component={Checkout} exact />\r\n                <Route path={GlobalPaths.addItemUrl} component={AddItem} exact />\r\n                <Route path={GlobalPaths.editItemUrl + \"/:itemId\"} component={EditItem} exact />\r\n                <Route path={GlobalPaths.addHatUrl} component={AddHat} exact />\r\n                <Route path={GlobalPaths.editHatUrl + \"/:hatId\"} component={EditHat} exact />\r\n                <Route component={Page404} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routing;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Header from \"../Header/Header\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport Routing from \"../Routing/Routing\";\r\nimport store from \"../../../Redux/Store\";\r\nimport { socketManagerInstance } from \"../../../Socket.io/SocketManager\";\r\n\r\nfunction App() {\r\n    //handling connect to Socket.io if user/admin did refresh\r\n    useEffect(() => {\r\n        if (store.getState().authState.auth.isLoggedIn) {\r\n            socketManagerInstance.connect();\r\n        }\r\n    })\r\n    \r\n    return (\r\n        <BrowserRouter>\r\n            <div className=\"App\">\r\n                <header>\r\n                    <Header />\r\n                </header>\r\n                <main>\r\n                    <Routing />\r\n                </main>\r\n                <aside>\r\n                    <Menu />\r\n                </aside>\r\n            </div>\r\n        </BrowserRouter >\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/LayoutArea/App/App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}